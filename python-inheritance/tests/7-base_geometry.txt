The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

Test for the BaseGeometry function.  First import
``BaseGeometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Now use it:

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)
    
    >>> bg.integer_validator("name", "test")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer
    
    >>> bg.integer_validator("", None)
    Traceback (most recent call last):
    ...
    TypeError:  must be an integer
    
    >>> bg.integer_validator("", -10)
    Traceback (most recent call last):
    ...
    ValueError:  must be greater than 0

    >>> bg.integer_validator("x", -10)
    Traceback (most recent call last):
    ...
    ValueError: x must be greater than 0

    >>> bg.integer_validator("x", (4,))
    Traceback (most recent call last):
    ...
    TypeError: x must be an integer

    >>> bg.integer_validator("x", [4])
    Traceback (most recent call last):
    ...
    TypeError: x must be an integer

    >>> bg.integer_validator("x", True)
    Traceback (most recent call last):
    ...
    TypeError: x must be an integer

    >>> bg.integer_validator("x", {1, 4})
    Traceback (most recent call last):
    ...
    TypeError: x must be an integer

    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("area")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("area", 0)
    Traceback (most recent call last):
    ...
    ValueError: area must be greater than 0