The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Test for the matrix_divided function.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use it:

    >>> matrix_divided([[1,2,3], [4,5,6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
    >>> matrix_divided([[1,2,3], [4,5,6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    >>> matrix_divided([[1,2,3], [4,5,6]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
    >>> matrix_divided([[1,2,3,5], [4]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix_divided([[1], None], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided(0,3)
    Traceback (most recent call last):
      File "/usr/lib/python3.8/doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest 2-matrix_divided.txt[6]>", line 1, in <module>
        matrix_divided(0,3)
      File "/root/git-repos/holbertonschool-higher_level_programming/python-test_driven_development/2-matrix_divided.py", line 14, in matrix_divided
        raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided(None, None)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

